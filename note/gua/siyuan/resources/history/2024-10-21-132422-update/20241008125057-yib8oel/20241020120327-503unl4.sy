{"ID":"20241020120327-503unl4","Spec":"1","Type":"NodeDocument","Properties":{"id":"20241020120327-503unl4","title":"Untitled","updated":"20241021132229"},"Children":[{"ID":"20241021131010-radux30","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20241021131010-radux30","updated":"20241021132048"},"Children":[{"Type":"NodeText","Data":"php、Java反序列化漏洞原理"}]},{"ID":"20241021132049-0za4q52","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20241021132049-0za4q52","updated":"20241021132229"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"YmFzaA=="},{"Type":"NodeCodeBlockCode","Data":"PHP\nserialize() unserialize()\n序列化就是把一个对象变成可以传输的字符串,如果服务器能够接收我们反序列化过的字符串、并且未经过滤的把其中的变量直接放进这些魔术方法里面的话，就容易造成很严重的漏洞了\n\nJAVA \nJava 序列化是指把 Java 对象转换为字节序列的过程便于保存在内存、文件、数据库中，ObjectOutputStream类的 writeObject() 方法可以实现序列化。\nJava 反序列化是指把字节序列恢复为 Java 对象的过程，ObjectInputStream 类的 readObject() 方法用于反序列化。\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}